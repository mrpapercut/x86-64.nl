{% extends 'partials/base.html.twig' %}

{% block content %}
    {% include 'partials/navigation.html.twig' %}
    <article class="article {% if theme_config.scrollappear_enabled %}scrollappear{% endif %}">
        <div class="article-content">
            <form id="pwgen">
                <label for="length"><span class="pwgen-label">Length (max 1024):</span><input type="number" id="length" name="length" min="16" max="1024" value="24"></label>
                <label for="use_symbols"><span class="pwgen-label">Use symbols (!$#%@*&-_+=):</span><input type="checkbox" id="use_symbols" name="use_symbols" checked></label>
                <button type="button" id="regen" name="regen">Regenerate</button>
                <pre id="generated"></pre>
            </form>
        </div>
        <script>
        const form = document.getElementById('pwgen');
        const inputLength = form.querySelector('input#length');
        const inputUseSymbols = form.querySelector('input#use_symbols');
        const output = form.querySelector('pre#generated');
        const regenBtn = form.querySelector('button');

        inputLength.addEventListener('change', e => generatePassword(e.target.value, !!inputUseSymbols.checked));
        inputUseSymbols.addEventListener('change', e => generatePassword(inputLength.value, !!e.target.checked));
        regenBtn.addEventListener('click', e => generatePassword(inputLength.value, !!inputUseSymbols.checked));

        const generatePassword = (length = 24, useSymbols = true) => {
            if (length < 16) length = 16;
            if (length > 1024) length = 1024;

            const chars = 'abcdefghijklmnopqrstuvwxyz0123456789'.split('');
            const symbols = '!$#%@*&-_+='.split('');

            const randValues = crypto.getRandomValues(new Uint8Array(length * 2));

            // Get random number of symbols below 50% of password length
            const numSymbols = Math.floor(Math.random() * Math.floor(length / 2));

            const result = []
            let symbolCounter = 0;

            for (let i in randValues) {
                let char = null;

                if (useSymbols && randValues[i] < 56 && symbolCounter < numSymbols) {
                    char = symbols[randValues[i] % symbols.length];
                    symbolCounter++;
                } else {
                    char = chars[randValues[i] % chars.length];
                }

                if (randValues[i] % 3 === 0) {
                    char = char.toUpperCase();
                }

                result.push(char)
            }

            const pw = result.join('').substring(0, length);

            output.innerHTML = pw;
        }

        generatePassword();
        </script>
    </article>
    {% include 'partials/footer.html.twig' %}
{% endblock %}
